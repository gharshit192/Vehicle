plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.4.10'
    id "com.commercehub.gradle.plugin.avro" version "0.9.1"
}

apply plugin: 'maven'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

group 'org.example'
version '1.0-SNAPSHOT'

ext {
    kotlin_version = "1.4.21"
    jerseyVersion = "2.32"
    daggerVersion = "2.30"
}




dependencies{
    //  ######################### All Development Dependencies #########################

    // Kotlin stdlib

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.4.0"

    // Jersey
    implementation group: 'org.glassfish', name: 'javax.json', version: '1.1.4'
    implementation group: 'org.glassfish.jersey.core', name: 'jersey-server', version: jerseyVersion
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'com.sun.jersey', name: 'jersey-json', version: '1.19.4'

    // Jersey Grizzly Server
    implementation group: 'org.glassfish.jersey.containers', name: 'jersey-container-grizzly2-http', version: jerseyVersion

    // https://mvnrepository.com/artifact/org.glassfish.jersey.inject/jersey-hk2
    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: jerseyVersion

    // Apache Avro
    implementation group: 'org.apache.avro', name: 'avro', version: '1.10.0'

    // Confluent and kafka
    implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.3.0'
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '2.7.0'

    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20190722'

    // gson
    implementation "com.google.code.gson:gson:2.8.5"

    // jackson
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-avro:2.12.0'


    // json-simple
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    // dagger
    implementation group: 'com.google.dagger', name: 'dagger', version: daggerVersion
    // dagger compiler
    implementation 'com.google.dagger:dagger-compiler:2.30'

    // mongo driver
    implementation group: 'org.mongodb', name: 'mongodb-driver', version: '3.12.7'

    //  kapt
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"



//  ######################### All Test Dependencies #########################

    // Junit 4
    implementation 'junit:junit:4.13.1'

    // Mockito - Kotlin
    testImplementation group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
    testImplementation 'org.mockito:mockito-inline:2.13.0'

    // Jersey Test
    testImplementation group: 'org.glassfish.jersey.test-framework', name: 'jersey-test-framework-core', version: jerseyVersion
    testImplementation group: 'org.glassfish.jersey.test-framework.providers', name: 'jersey-test-framework-provider-grizzly2', version: jerseyVersion

    //  kapt Test
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    // EmbeddedMongoDB
    testImplementation group: "de.flapdoodle.embed", name: "de.flapdoodle.embed.mongo", version: "2.0.3"

    // Logging
    implementation "org.slf4j:slf4j-simple:1.7.30"
    implementation "org.apache.logging.log4j:log4j-core:2.12.0"
    implementation "org.apache.logging.log4j:log4j-api:2.12.0"
}


//test {
//    useJUnitPlatform()
//}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

task deleteAvroGeneratedModels(type: Delete){
    delete fileTree("src\\main\\java")
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    //point plugin to folder with avro schemas
    dependsOn(deleteAvroGeneratedModels)
    source("src/main/resources/avro")
    //point plugin to folder with generated POJOs
    outputDir = file("src/main/java/")
}

